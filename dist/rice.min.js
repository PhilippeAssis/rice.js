"use strict";function _defineProperty(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}Object.prototype.mapping=function(e,r){if("string"==typeof e){var e=e.split("."),n=this;if(r){e.reverse();for(var o=_defineProperty({},e[0],r),t=1;t<e.length-1;t++)o=_defineProperty({},e[t],o);n[e[e.length-1]]=o}else for(var i=0;i<e.length;i++)n=n[e[i]];return n}return this};var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};String.prototype.replaceRecursive=function(e,r){var n=this;return n.replace(new RegExp(e,"g"),r)},String.prototype.replaceAll=function(e,r){var n=this;if(Array.isArray(e)){for(var o in e)n=n.replaceRecursive(e[o],r);return n}if("object"==("undefined"==typeof e?"undefined":_typeof(e))){for(var o in e)n=n.replaceRecursive(o,e[o]);return n}return n.replaceRecursive(o,e[o])},String.prototype.replaceVar=function(e,r,n){var o=this;if(n||(n="%"),Array.isArray(e)){for(var t in e)o=o.replaceAll(n+e[t]+n,r);return o}if("object"==("undefined"==typeof e?"undefined":_typeof(e))){for(var t in e)o=o.replaceAll(n+t+n,e[t]);return o}return o.replaceAll(n+t+n,e[t])};var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Rice=function(){var e={service:{},controller:{},_:{services:{},servicesLoaded:{},globals:{},cache:{},constructors:[],controllers:{},config:{test:{ok:!0}},build:{}}};return e.name="Rice!",e.addConstructor=function(r){e._.constructors.push(r)},e.init=function(){for(var r in e._.constructors){var n=e._.constructors[r].call(e);n&&(e=n)}return e},e.addConfig=function(r,n){function o(r,n){return e._.config.mapping(r)?console.error('There is already an item named "'+r+'" in config. To update this item use setConfig ()'):void e._.config.mapping(r,n)}if("object"==("undefined"==typeof r?"undefined":_typeof(r)))for(var t in r)o(t,r[t]);else o(r,n)},e.setConfig=function(r,n){function o(r,n){e._.config.mapping(r,n)}if("object"==("undefined"==typeof r?"undefined":_typeof(r)))for(var t in r)o(t,r[t]);else o(r,n)},e.getConfig=function(r){return e._.config.mapping(r)},e.add=function(r,n){return e[r]?console.error('"Rice.'+r+'" was not created. A key with this name already exists.'):(e[r]=n,e)},e.build=function(r,n){e._.build[r]={};var o=n.apply(e);return o?window.rice=o:e},e.cache=function(r,n){return n?void(e._.cache[r]=n):e._.cache[r]?e._.cache[r]:void 0},e.global=function(r,n){return n?void(e._.globals[r]=n):e._.globals[r]?e._.globals[r]:void 0},e.addService=function(r,n){return e._.services[r]?console.error('Can not create the "'+r+'" service. Another service with this name already exists'):void(e._.services[r]=n)},e.initService=function(r){for(var n=arguments.length,o=Array(n>1?n-1:0),t=1;t<n;t++)o[t-1]=arguments[t];return e._.services[r]?(e.service[r]=e._.services[r].apply(null,o),void(e.service[r].init&&e.service[r].init())):console.error('There is no registered service called "'+r+'"')},e.initAllServices=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};for(var n in e._.services){var o=[n];r[n]&&(Array.isArray(r[n])?r[n].map(function(e){o.push(r[e])}):o.push(r[n])),e.initService.apply(null,o)}},e.stopService=function(r){e.service[r]&&(e.service[r].stop?e.service[r].stop(function(){delete e.service[r]}):delete e.service[r],delete e._.services[r])},e.stopAllServices=function(r){for(var n in e.service)e.stopService(n)},e.addController=function(r,n){e._.controllers[r]=n},e.controller=function(r){try{for(var n=e._.controllers[r],o=arguments.length,t=Array(o>1?o-1:0),i=1;i<o;i++)t[i-1]=arguments[i];return n.apply(null,t)}catch(n){if(!e._.controllers[r])return console.error('The controller "'+r+'" has not been registered. Use Rice.addController("'+r+'", function(){...}) to register it.');console.error(n)}},e}();