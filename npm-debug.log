0 info it worked if it ends with ok
1 verbose cli [ '/home/ubuntu/.nvm/versions/node/v7.7.0/bin/node',
1 verbose cli   '/home/ubuntu/.nvm/versions/node/v7.7.0/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@4.1.2
3 info using node@v7.7.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/ubuntu/workspace',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/ubuntu/.npm/ricejs/0.9.0/package.tgz not in flight; packing
9 verbose correctMkdir /home/ubuntu/.npm correctMkdir not in flight; initializing
10 info lifecycle ricejs@0.9.0~prepublish: ricejs@0.9.0
11 silly lifecycle ricejs@0.9.0~prepublish: no script for prepublish, continuing
12 info lifecycle ricejs@0.9.0~prepare: ricejs@0.9.0
13 silly lifecycle ricejs@0.9.0~prepare: no script for prepare, continuing
14 verbose tar pack [ '/home/ubuntu/.npm/ricejs/0.9.0/package.tgz',
14 verbose tar pack   '/home/ubuntu/workspace' ]
15 verbose tarball /home/ubuntu/.npm/ricejs/0.9.0/package.tgz
16 verbose folder /home/ubuntu/workspace
17 verbose addLocalTarball adding from inside cache /home/ubuntu/.npm/ricejs/0.9.0/package.tgz
18 verbose correctMkdir /home/ubuntu/.npm correctMkdir not in flight; initializing
19 silly cache afterAdd ricejs@0.9.0
20 verbose afterAdd /home/ubuntu/.npm/ricejs/0.9.0/package/package.json not in flight; writing
21 verbose correctMkdir /home/ubuntu/.npm correctMkdir not in flight; initializing
22 verbose afterAdd /home/ubuntu/.npm/ricejs/0.9.0/package/package.json written
23 silly publish { name: 'ricejs',
23 silly publish   version: '0.9.0',
23 silly publish   description: 'Ricejs is a frontend integration framework for javascript applications. Its main feature is the architecture of the project, allowing the developer to work with any of the thousands of javascript frameworks on the internet.',
23 silly publish   main: 'dist/rice.min.js',
23 silly publish   devDependencies:
23 silly publish    { 'babel-cli': '^6.22.2',
23 silly publish      'babel-preset-env': '^1.1.8',
23 silly publish      'babel-preset-es2015-script': '^1.1.0',
23 silly publish      gulp: '^3.9.1',
23 silly publish      'gulp-autowatch': '^1.0.2',
23 silly publish      'gulp-babel': '^6.1.2',
23 silly publish      'gulp-clean': '^0.3.2',
23 silly publish      'gulp-concat': '^2.6.1',
23 silly publish      'gulp-minify': '0.0.14',
23 silly publish      'gulp-plumber': '^1.1.0',
23 silly publish      'gulp-pug': '^3.2.0',
23 silly publish      'gulp-stylus': '^2.6.0' },
23 silly publish   repository:
23 silly publish    { type: 'git',
23 silly publish      url: 'git+https://github.com/PhilippeAssis/rice.js.git' },
23 silly publish   author: { name: 'Philippe Assis', email: 'assis@philippeassis.com' },
23 silly publish   license: 'ISC',
23 silly publish   bugs: { url: 'https://github.com/PhilippeAssis/rice.js/issues' },
23 silly publish   homepage: 'https://github.com/PhilippeAssis/rice.js#readme',
23 silly publish   keywords: [ 'Architeture', 'framework', 'rice', 'rice.js' ],
23 silly publish   readme: '## What I am?\nRicejs is a frontend integration framework for javascript applications. Its main feature is the architecture of the project, allowing the developer to work with any of the thousands of javascript frameworks on the internet.\n\nRicejs works in direct partnership with [Gulp](https://github.com/gulpjs/gulp), [Yeoman](https://github.com/yeoman/yeoman), [Babel](https://github.com/babel/babel) and [Browserify](https://github.com/substack/node-browserify).\n\n## Install\n### or Ricejs to Yeoman\n```\nnpm install -g yo generator-ricejs && yo ricejs\n```\n### or Rice core\n```\nnpm install ricejs\n```\n\n## Architecture\nRicejs guarantees a simple, intuitive and organized file architecture.\n\n```\n+-- app\n|   +-- assets\n|   +-- configs\n|   +-- controllers\n|   +-- libs\n|   +-- services\n|   +-- views\n|   +-- app.js\n+-- public\n+-- node_modules\n+-- gulpfiles.js\n```\n\nTo start a project with ricejs, once installed, just run ricejs on the terminal. When everything is installed and completed, run gulp live to enable automatic scripting.\n\n### Live reload\nThe [livereload](https://github.com/vohof/gulp-livereload) is responsible for dynamically updating web pages. You will need to install extensions for browsers. You can find these extensions at [livereload.com/extensions](http://livereload.com/extensions/).\n\n## ECMAScript 6 e Node Modules \nRicejs comes configured by default to work with *ECMAScript 6* carrying your built-in script to *ECMAScript 5*. He uses the *Babel* to do this task.\n\n### Browserify\nBrowserify guarantees the use of npm modules in your application, learn more at [node-browserify] (https://github.com/substack/node-browserify)\n\n## Config method\'s\nThe Ricejs settings handling method allows you to easily manipulate your application settings.\nThey come with an identifier called "String to tree object".\n\n### String to tree object\n\nHere is a demonstration of tree structure of a configuration object\n```json\n{\n    "page": {\n        "name" : "home"\n    },\n    "user": {\n        "id": 123,\n        "name": "Assis"\n    }\n}\n```\n\nTraditionally you would get the value of page.name so `config.page.name`, and this is how you will indicate the object to be handled (add, get, set) with the configuration methods.\n\n### addConfig, getConfig, setConfig\n#### add\n\nLet\'s add some data to our configuration:\n```javascript\n Rice.addConfig("page.name", "home")\n Rice.addConfig("user.name", "Assis")\n```\nNow, let\'s modify them\n```javascript\n Rice.setConfig("page.name", "contact")\n Rice.setConfig("user.name", "Philippe")\n```\nIn the end, let\'s get it.\n```javascript\n Rice.getConfig("page.name") // contact\n Rice.setConfig("user.name") // Philippe\n Rice.setConfig() // Complete tree of the config object\n```\n\n## Controllers\nAll controllers must be available in `app / controllers`, using the suffix **Controller.js**.\nControllers are modules that allow you to organize your application by task groups.\n\nTo start a controller, simply declare `Rice.controller (\'CONTROLLER_NAME\')`.\n\n## Services\nThe services must be available in `app/services`, using the suffix **Service.js**.\nThe services are modules intended to work with an application service.\n\nSome methods must be available in this module, such as **start**, **stop**, **restart**, **reload**.\nIts default structure is this:\n```javascript\nimport Rice from \'ricejs\'\n\nexports function myService(){\n    this.start = () => {/*...*/} // Required\n    \n    this.restart = () => {/*...*/} \n    \n    this.reload = () => {/*...*/}\n    \n    this.stop = () => {/*...*/}\n    \n    return this;\n}\n```\nThe **start method** is required only one..\n\n## All methods\n - **addConstructor(build)**: Adds a counter to start along with the rice. Used mainly for plugins.\n - **init()**: Rice builders start.\n - **addConfig(name, value)**: Add a setting.\n - **setConfig(name, value)**: Change a setting.\n - **getConfig()**: Get value of a setting.\n - **add(name, value)**: Adds a property to the root of the Rice object.\n - **build(name, build)**: To creation of plugins.\n - **cache(name, value)**: Specific for temporary data.\n - **global()**: Specific to global data that may be wanted throughout the application.\n - **import()**: Imports a library/module within the structure of rice.\n - **controller()**: Start a controller.\n - **service()**: Start a service.\n - **lib()**: Start a library.\n - **allServices(method)**: Would call one method on every imported service',
23 silly publish   readmeFilename: 'readme.md',
23 silly publish   gitHead: '47d0a62651bff170b72580eec96418c9c079bfff',
23 silly publish   _id: 'ricejs@0.9.0',
23 silly publish   scripts: {},
23 silly publish   _shasum: '5f98c74591d6283baab9f54b6c613b2b9b7f1b00',
23 silly publish   _from: '.' }
24 info lifecycle ricejs@0.9.0~prepublishOnly: ricejs@0.9.0
25 silly lifecycle ricejs@0.9.0~prepublishOnly: no script for prepublishOnly, continuing
26 verbose getPublishConfig undefined
27 silly mapToRegistry name ricejs
28 silly mapToRegistry using default registry
29 silly mapToRegistry registry https://registry.npmjs.org/
30 silly mapToRegistry data Result {
30 silly mapToRegistry   raw: 'ricejs',
30 silly mapToRegistry   scope: null,
30 silly mapToRegistry   escapedName: 'ricejs',
30 silly mapToRegistry   name: 'ricejs',
30 silly mapToRegistry   rawSpec: '',
30 silly mapToRegistry   spec: 'latest',
30 silly mapToRegistry   type: 'tag' }
31 silly mapToRegistry uri https://registry.npmjs.org/ricejs
32 verbose publish registryBase https://registry.npmjs.org/
33 silly publish uploading /home/ubuntu/.npm/ricejs/0.9.0/package.tgz
34 verbose request uri https://registry.npmjs.org/ricejs
35 verbose request sending authorization for write operation
36 info attempt registry request try #1 at 8:20:03 PM
37 verbose request using bearer token for auth
38 verbose request id 64c878b102fd78d3
39 http request PUT https://registry.npmjs.org/ricejs
40 http 403 https://registry.npmjs.org/ricejs
41 verbose headers { 'content-type': 'application/json',
41 verbose headers   'cache-control': 'max-age=300',
41 verbose headers   'content-length': '95',
41 verbose headers   'accept-ranges': 'bytes',
41 verbose headers   date: 'Wed, 01 Mar 2017 20:20:04 GMT',
41 verbose headers   via: '1.1 varnish',
41 verbose headers   connection: 'keep-alive',
41 verbose headers   'x-served-by': 'cache-ord1740-ORD',
41 verbose headers   'x-cache': 'MISS',
41 verbose headers   'x-cache-hits': '0',
41 verbose headers   'x-timer': 'S1488399603.713513,VS0,VE761',
41 verbose headers   vary: 'Accept-Encoding' }
42 verbose request invalidating /home/ubuntu/.npm/registry.npmjs.org/ricejs on PUT
43 error publish Failed PUT 403
44 verbose stack Error: "You cannot publish over the previously published version 0.9.0." : ricejs
44 verbose stack     at makeError (/home/ubuntu/.nvm/versions/node/v7.7.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:304:12)
44 verbose stack     at CachingRegistryClient.<anonymous> (/home/ubuntu/.nvm/versions/node/v7.7.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:292:14)
44 verbose stack     at Request._callback (/home/ubuntu/.nvm/versions/node/v7.7.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:212:14)
44 verbose stack     at Request.self.callback (/home/ubuntu/.nvm/versions/node/v7.7.0/lib/node_modules/npm/node_modules/request/request.js:186:22)
44 verbose stack     at emitTwo (events.js:106:13)
44 verbose stack     at Request.emit (events.js:194:7)
44 verbose stack     at Request.<anonymous> (/home/ubuntu/.nvm/versions/node/v7.7.0/lib/node_modules/npm/node_modules/request/request.js:1081:10)
44 verbose stack     at emitOne (events.js:96:13)
44 verbose stack     at Request.emit (events.js:191:7)
44 verbose stack     at IncomingMessage.<anonymous> (/home/ubuntu/.nvm/versions/node/v7.7.0/lib/node_modules/npm/node_modules/request/request.js:1001:12)
45 verbose statusCode 403
46 verbose pkgid ricejs
47 verbose cwd /home/ubuntu/workspace
48 error Linux 4.8.8-c9
49 error argv "/home/ubuntu/.nvm/versions/node/v7.7.0/bin/node" "/home/ubuntu/.nvm/versions/node/v7.7.0/bin/npm" "publish"
50 error node v7.7.0
51 error npm  v4.1.2
52 error code E403
53 error "You cannot publish over the previously published version 0.9.0." : ricejs
54 error If you need help, you may report this error at:
54 error     <https://github.com/npm/npm/issues>
55 verbose exit [ 1, true ]
